/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define SYMNUM 1
#define NAVFN 2
#define CONFIG 3

/ {    
    macros {
        ZMK_MACRO(save,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings =  <&macro_tap &kp ESC &kp COLON &kp W &kp RET>;
        )
    };

    combos {
        compatible = "zmk,combos";
        combos_lgui {
            key-positions = <0 8>;
            bindings = <&kp LGUI>;
            timeout-ms = <50>;
        };
        combos_lalt {
            key-positions = <1 9>;
            bindings = <&kp LALT>;
            timeout-ms = <50>;
        };
        combos_lshft {
            key-positions = <2 10>;
            bindings = <&kp LSHFT>;
            timeout-ms = <50>;
        };
        combos_lctrl {
            key-positions = <3 11>;
            bindings = <&kp LCTRL>;
            timeout-ms = <50>;
        };
        combos_rctrl {
            key-positions = <4 12>;
            bindings = <&kp RCTRL>;
            timeout-ms = <50>;
        };
        combos_rshft {
            key-positions = <5 13>;
            bindings = <&kp RSHFT>;
            timeout-ms = <50>;
        };
        combos_ralt {
            key-positions = <6 14>;
            bindings = <&kp RALT>;
            timeout-ms = <50>;
        };
        combos_rgui {
            key-positions = <9 15>;
            bindings = <&kp RGUI>;
            timeout-ms = <50>;
        };
        combos_mclk {
            key-positions = <24 25>;
            bindings = <&mkp MCLK>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        // scroll_encoder {
        //     compatible = "zmk,behavior-sensor-rotate";
        //     #sensor-binding-cells = <0>;
        //     bindings = <&kp K_VOL_UP>, <&kp K_VOL_DN>;
        // };
        vol_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp K_VOL_UP>, <&kp K_VOL_DN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {

// | B | Y | O        | U        || L         | D         | W | V | 
// | C | I | E        | A        || H         | T         | S | N |
// | G | X | J        | K        || R         | M         | F | P |
//         | RET      | NAV(SPC) || SYM(BSPC) | CONF(ESC) |

            bindings = <
   &kp B &kp Y &kp O &kp U  &kp L   &kp D &kp W &kp V
   &kp C &kp I &kp E &kp A  &kp H   &kp T &kp S &kp N
   &kp G &kp X &kp J &kp K  &kp R   &kp M &kp F &kp P
   &lt NAVFN RET  &mt LSHFT SPACE  &lt SYMNUM BSPC &lt CONFIG ESC
            >;
            // sensor-bindings = <&scroll_encoder>;
        };
        symnum_layer {

// |   | ` |  \   |  /   || 1 | 2 | 3 | 4 | 
// | ' | - | ,    | .    || 5 | 6 | 7 | 8 |
// | = | ; | [    | ]    || 9 | 0 | Z | Q |
//         | SAVE | TAB  ||   |   |

            bindings = <
   &none     &kp GRAVE &kp BSLH  &kp FSLH      &kp N1 &kp N2 &kp N3 &kp N4
   &kp SQT   &kp MINUS &kp COMMA &kp DOT       &kp N5 &kp N6 &kp N7 &kp N8
   &kp EQUAL &kp SEMI  &kp LBKT  &kp RBKT      &kp N9 &kp N0 &kp Z  &kp Q
                       &save     &mt LSHFT TAB &trans &none
            >;
            sensor-bindings = <&vol_encoder>;
        };
        navfn_layer {

// |      |      |      |     || F1  | F2  | F3  | F4  | 
// | HOME | PGDN | PGUP | END || F5  | F6  | F7  | F8  |
// | LFT  | DWN  | UP   | RGT || F9  | F10 | F11 | F12 |
//               |      |     || DEL |     |

            bindings = <
   &none    &none     &none     &none     &kp F1  &kp F2  &kp F3  &kp F4
   &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp F5  &kp F6  &kp F7  &kp F8
   &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp F9  &kp F10 &kp F11 &kp F12
                      &trans    &trans    &kp DEL &caps_word
            >;
        };
        config_layer {

// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ || BT1    | BT2 | BT3 | BT4   |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI+ || BT5    |     |     |       |
// |          |          |          | RGB TOG  || BT CLR |     |     | RESET |
//                       |          |          ||        |     |

            bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR  &bt BT_SEL 4 &bt BT_NXT   &bt BT_PRV   &none     
   &none           &none           &none           &rgb_ug RGB_TOG  &bt BT_CLR   &none        &out OUT_TOG &sys_reset   
                                   &kp CAPS        &trans           &trans       &trans
            >;
        };
    };
};
